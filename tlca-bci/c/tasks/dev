#!/bin/bash

PROJECT_HOME=$(dirname "$0")/..

build_bci() {
    echo "---| build bci"

    make || exit 1
}

build_bin() {
    echo "---| assemble scenario tests"

    ../../kotlin-tlca/tasks/dev parser || exit 1
    ../../kotlin-tlca/tasks/dev jar || exit 1
    ../../kotlin-tlca/tasks/dev compiler_scenario || exit 1
}

unit_tests() {
    echo "---| run unit tests"

    for FILE in ../unit-tests/*.bci; do
        echo "- unit test: $FILE"
        deno run --allow-read --allow-write ../deno/bci.ts asm "$FILE" || exit 1
        ./src/bci run ../unit-tests/$(basename "$FILE" .bci).bin > t.txt || exit 1
        cat t.txt

        if grep -q "Memory leak detected" t.txt; then
            echo "scenario test failed: $FILE"
            echo "Memory leak detected"
            rm t.txt
            exit 1
        fi

        grep -v "^gc" t.txt > t2.txt
        if ! diff -q ../unit-tests/$(basename "$FILE" .bci).out t2.txt; then
            echo "scenario test failed: $FILE"
            diff ../unit-tests/$(basename "$FILE" .bci).out t2.txt
            rm t.txt t2.txt
            exit 1
        fi

        rm t.txt t2.txt
    done
}

scenario_tests() {
    echo "---| run scenario tests"

    for FILE in ../../tlca/scenarios/*.inp; do
        echo "- scenario test: $FILE"
        ./src/bci run ../../tlca/scenarios/$(basename "$FILE" .inp).bin > t.txt || exit 1
        cat t.txt

        if ! diff -q ../../tlca/scenarios/$(basename "$FILE" .inp).out t.txt; then
            echo "scenario test failed: $FILE"
            diff ../../tlca/scenarios/$(basename "$FILE" .inp).out t.txt
            rm t.txt
            exit 1
        fi

        rm t.txt
    done
}

cd "$PROJECT_HOME" || exit 1

case "$1" in
"" | help)
    echo "Usage: $0 [<command>]"
    echo "Commands:"
    echo "  help"
    echo "    This help page"
    echo "  bci"
    echo "    Build the bci binary"
    echo "  bin"
    echo "    Assemble the scenario bin files"
    echo "  scenario"
    echo "    Run the different scenario tests"
    echo "  unit"
    echo "    Run the different unit tests"
    echo "  run"
    echo "    Run all tasks"
    ;;

bci)
    build_bci
    ;;

bin)
    build_bin
    ;;

scenario)
    scenario_tests
    ;;

unit)
    unit_tests
    ;;

run)
    build_bci
    unit_tests
    build_bin
    scenario_tests
    ;;

*)
    echo "$0: $1: Unknown command"
    exit 1
    ;;
esac
